apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092
            - containerPort: 9093
            - containerPort: 9094
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "{{ .Values.kafka.env.cfg_node_id }}"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "{{ .Values.kafka.env.cfg_process_roles }}"
            - name: KAFKA_CFG_LISTENERS
              value: "{{ .Values.kafka.env.cfg_listeners }}"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "{{ .Values.kafka.env.cfg_advertised_listeners }}"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "{{ .Values.kafka.env.cfg_controller_quorum_voters }}"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.kafka.env.cfg_listener_security_protocol_map }}"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "{{ .Values.kafka.env.cfg_controller_listener_names }}"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "{{ .Values.kafka.env.cfg_inter_broker_listener_name }}"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "{{ .Values.kafka.env.allow_plaintext_listener }}"
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
