# Application configuration
replicaCount: 1

# Database configuration
configuration:
  postgres:
    port: "5432"
    user: myuser
    password: somerandompassword
  orders:
    host: postgres-orders
    database_name: orders_database
    service_topic_read: orders
    service_topic_write: inventory
  inventory:
    host: postgres-inventory
    database_name: inventory_database
    service_topic_read: inventory
    service_topic_write: orders
  kafka:
    host: kafka-0.kafka
    port: "9092"

# Kafka configuration
kafka:
  env:
    cfg_node_id: "1"
    cfg_process_roles: "broker,controller"
    cfg_listeners: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094"
    cfg_advertised_listeners: "PLAINTEXT://kafka-0.kafka:9092,EXTERNAL://localhost:9094"
    cfg_controller_quorum_voters: "1@kafka-0.kafka:9093"
    cfg_listener_security_protocol_map: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
    cfg_controller_listener_names: "CONTROLLER"
    cfg_inter_broker_listener_name: "PLAINTEXT"
    allow_plaintext_listener: "yes"
  ports:
    - containerPort: 9092
    - containerPort: 9093
    - containerPort: 9094

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  hosts:
    - host: saga-go.local
      paths:
        - path: /orders
          pathType: Prefix
          service: orders-service
          port: 80
        - path: /inventory
          pathType: Prefix
          service: inventory-service
          port: 80
        - path: /kafka-ui
          pathType: Prefix
          service: kafka-ui
          port: 80
  tls: []
